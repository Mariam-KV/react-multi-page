{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marik\\\\Desktop\\\\react-multi-page\\\\src\\\\components\\\\comments\\\\Comments.js\",\n  _s = $RefreshSig$();\nimport { useState, useCallback, u } from \"react\";\nimport useHttp from \"../../hooks/use-http\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport { getAllComments } from \"../../lib/api\";\nimport NoQuotesFound from \"../quotes/NoQuotesFound\";\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport { useEffect } from \"react\";\nimport CommentList from \"./CommentsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = props => {\n  _s();\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  let {\n    sendRequest,\n    data,\n    error,\n    status\n  } = useHttp(getAllComments, true);\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  let id = props.id;\n  useEffect(() => {\n    sendRequest(id);\n  }, [sendRequest, id]);\n  let handleAddComments = useCallback(() => {\n    sendRequest(id);\n    setIsAddingComment(false);\n  }, [sendRequest, id]);\n  if (status === \"pending\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered focused\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  }\n  console.log(data);\n  //if (status === \"completed\" && !data.commentData) {\n  //return <p className=\"centered\">No comments found</p>;\n  //}\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), !isAddingComment && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: startAddCommentHandler,\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), isAddingComment && /*#__PURE__*/_jsxDEV(NewCommentForm, {\n      id: props.id,\n      onAddedComment: handleAddComments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data.length !== 0 ? /*#__PURE__*/_jsxDEV(CommentList, {\n        comments: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"centered\",\n        children: \"No comments were addded yet!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Comments, \"KPxzQCBn4SGCW58VnwqtaPp7n84=\", false, function () {\n  return [useHttp];\n});\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useState","useCallback","u","useHttp","LoadingSpinner","getAllComments","NoQuotesFound","classes","NewCommentForm","useEffect","CommentList","Comments","props","isAddingComment","setIsAddingComment","sendRequest","data","error","status","startAddCommentHandler","id","handleAddComments","console","log","comments","length"],"sources":["C:/Users/marik/Desktop/react-multi-page/src/components/comments/Comments.js"],"sourcesContent":["import { useState, useCallback ,u} from \"react\";\nimport useHttp from \"../../hooks/use-http\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport { getAllComments } from \"../../lib/api\";\nimport NoQuotesFound from \"../quotes/NoQuotesFound\";\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport { useEffect } from \"react\";\nimport CommentList from \"./CommentsList\";\n\nconst Comments = (props) => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  let { sendRequest, data, error, status } = useHttp(getAllComments, true);\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  let id = props.id;\n  useEffect(() => {\n    sendRequest(id);\n  }, [sendRequest, id]);\n  let handleAddComments = useCallback(() => {\n    sendRequest(id);\n    setIsAddingComment(false);\n  }, [sendRequest, id]);\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p className=\"centered focused\">{error}</p>;\n  }\n  console.log(data);\n  //if (status === \"completed\" && !data.commentData) {\n  //return <p className=\"centered\">No comments found</p>;\n  //}\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm id={props.id} onAddedComment={handleAddComments} />\n      )}\n      <div>\n        {data.length !== 0 ? (\n          <CommentList comments={data} />\n        ) : (\n          <p className=\"centered\">No comments were addded yet!</p>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default Comments;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,WAAW,EAAEC,CAAC,QAAO,OAAO;AAC/C,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,cAAc,MAAM,sBAAsB;AACjD,SAASC,cAAc,QAAQ,eAAe;AAC9C,OAAOC,aAAa,MAAM,yBAAyB;AACnD,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,WAAW,MAAM,gBAAgB;AAAC;AAEzC,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAA;EAC1B,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC7D,IAAI;IAAEe,WAAW;IAAEC,IAAI;IAAEC,KAAK;IAAEC;EAAO,CAAC,GAAGf,OAAO,CAACE,cAAc,EAAE,IAAI,CAAC;EACxE,MAAMc,sBAAsB,GAAG,MAAM;IACnCL,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EACD,IAAIM,EAAE,GAAGR,KAAK,CAACQ,EAAE;EACjBX,SAAS,CAAC,MAAM;IACdM,WAAW,CAACK,EAAE,CAAC;EACjB,CAAC,EAAE,CAACL,WAAW,EAAEK,EAAE,CAAC,CAAC;EACrB,IAAIC,iBAAiB,GAAGpB,WAAW,CAAC,MAAM;IACxCc,WAAW,CAACK,EAAE,CAAC;IACfN,kBAAkB,CAAC,KAAK,CAAC;EAC3B,CAAC,EAAE,CAACC,WAAW,EAAEK,EAAE,CAAC,CAAC;EACrB,IAAIF,MAAM,KAAK,SAAS,EAAE;IACxB,oBACE;MAAK,SAAS,EAAC,UAAU;MAAA,uBACvB,QAAC,cAAc;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACd;EAEV;EAEA,IAAID,KAAK,EAAE;IACT,oBAAO;MAAG,SAAS,EAAC,kBAAkB;MAAA,UAAEA;IAAK;MAAA;MAAA;MAAA;IAAA,QAAK;EACpD;EACAK,OAAO,CAACC,GAAG,CAACP,IAAI,CAAC;EACjB;EACA;EACA;EACA,oBACE;IAAS,SAAS,EAAET,OAAO,CAACiB,QAAS;IAAA,wBACnC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAsB,EACrB,CAACX,eAAe,iBACf;MAAQ,SAAS,EAAC,KAAK;MAAC,OAAO,EAAEM,sBAAuB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAGzD,EACAN,eAAe,iBACd,QAAC,cAAc;MAAC,EAAE,EAAED,KAAK,CAACQ,EAAG;MAAC,cAAc,EAAEC;IAAkB;MAAA;MAAA;MAAA;IAAA,QACjE,eACD;MAAA,UACGL,IAAI,CAACS,MAAM,KAAK,CAAC,gBAChB,QAAC,WAAW;QAAC,QAAQ,EAAET;MAAK;QAAA;QAAA;QAAA;MAAA,QAAG,gBAE/B;QAAG,SAAS,EAAC,UAAU;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IACxB;MAAA;MAAA;MAAA;IAAA,QACG;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAEd,CAAC;AAAC,GAjDIL,QAAQ;EAAA,QAE+BR,OAAO;AAAA;AAAA,KAF9CQ,QAAQ;AAmDd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}