{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marik\\\\Desktop\\\\react-multi-page\\\\src\\\\pages\\\\AllQuotes.js\",\n  _s = $RefreshSig$();\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport useHttp from \"../hooks/use-http\";\nimport { useEffect } from \"react\";\nimport { getAllQuotes } from \"../lib/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet dummy_data = [{\n  id: \"p1\",\n  author: \"murakami\",\n  text: \"always be yourself\"\n}, {\n  id: \"p2\",\n  author: \"amark\",\n  text: \"love\"\n}];\nlet AllQuotes = () => {\n  _s();\n  let {\n    sendRequest,\n    status,\n    data,\n    error\n  } = useHttp(getAllQuotes);\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n  if (status === \"completed\" && !data) {\n    return 6;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(QuoteList, {\n      quotes: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(AllQuotes, \"DKPGMvjq366TubE4Be7HO1d6aak=\", false, function () {\n  return [useHttp];\n});\n_c = AllQuotes;\nexport default AllQuotes;\nvar _c;\n$RefreshReg$(_c, \"AllQuotes\");","map":{"version":3,"names":["QuoteList","useHttp","useEffect","getAllQuotes","dummy_data","id","author","text","AllQuotes","sendRequest","status","data","error"],"sources":["C:/Users/marik/Desktop/react-multi-page/src/pages/AllQuotes.js"],"sourcesContent":["import QuoteList from \"../components/quotes/QuoteList\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { useEffect } from \"react\";\r\nimport { getAllQuotes } from \"../lib/api\";\r\nlet dummy_data = [\r\n  { id: \"p1\", author: \"murakami\", text: \"always be yourself\" },\r\n  { id: \"p2\", author: \"amark\", text: \"love\" },\r\n];\r\n\r\nlet AllQuotes = () => {\r\n  let { sendRequest, status, data, error } = useHttp(getAllQuotes);\r\n\r\n  useEffect(() => {\r\n    sendRequest();\r\n  }, [sendRequest]);\r\n\r\n  if (status === \"completed\" && !data) {\r\n    return 6;\r\n  }\r\n  return (\r\n    <div>\r\n      <QuoteList quotes={data} />\r\n    </div>\r\n  );\r\n};\r\nexport default AllQuotes;\r\n"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,gCAAgC;AACtD,OAAOC,OAAO,MAAM,mBAAmB;AACvC,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,YAAY,QAAQ,YAAY;AAAC;AAC1C,IAAIC,UAAU,GAAG,CACf;EAAEC,EAAE,EAAE,IAAI;EAAEC,MAAM,EAAE,UAAU;EAAEC,IAAI,EAAE;AAAqB,CAAC,EAC5D;EAAEF,EAAE,EAAE,IAAI;EAAEC,MAAM,EAAE,OAAO;EAAEC,IAAI,EAAE;AAAO,CAAC,CAC5C;AAED,IAAIC,SAAS,GAAG,MAAM;EAAA;EACpB,IAAI;IAAEC,WAAW;IAAEC,MAAM;IAAEC,IAAI;IAAEC;EAAM,CAAC,GAAGX,OAAO,CAACE,YAAY,CAAC;EAEhED,SAAS,CAAC,MAAM;IACdO,WAAW,EAAE;EACf,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjB,IAAIC,MAAM,KAAK,WAAW,IAAI,CAACC,IAAI,EAAE;IACnC,OAAO,CAAC;EACV;EACA,oBACE;IAAA,uBACE,QAAC,SAAS;MAAC,MAAM,EAAEA;IAAK;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QACvB;AAEV,CAAC;AAAC,GAfEH,SAAS;EAAA,QACgCP,OAAO;AAAA;AAAA,KADhDO,SAAS;AAgBb,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module"}