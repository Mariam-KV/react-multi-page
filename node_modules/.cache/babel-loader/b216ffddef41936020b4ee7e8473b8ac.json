{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marik\\\\Desktop\\\\react-multi-page\\\\src\\\\pages\\\\AllQuotes.js\";\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet dummy_data = [{\n  id: \"p1\",\n  author: \"murakami\",\n  text: \"always be yourself\"\n}, {\n  id: \"p2\",\n  author: \"remark\",\n  text: \"love\"\n}];\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\nlet AllQuotes = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      children: \"Sort Ascending\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QuoteList, {\n      quotes: dummy_data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = AllQuotes;\nexport default AllQuotes;\nvar _c;\n$RefreshReg$(_c, \"AllQuotes\");","map":{"version":3,"names":["QuoteList","dummy_data","id","author","text","sortQuotes","quotes","ascending","sort","quoteA","quoteB","AllQuotes"],"sources":["C:/Users/marik/Desktop/react-multi-page/src/pages/AllQuotes.js"],"sourcesContent":["import QuoteList from \"../components/quotes/QuoteList\";\r\nlet dummy_data = [\r\n  { id: \"p1\", author: \"murakami\", text: \"always be yourself\" },\r\n  { id: \"p2\", author: \"remark\", text: \"love\" },\r\n];\r\nconst sortQuotes = (quotes, ascending) => {\r\n  return quotes.sort((quoteA, quoteB) => {\r\n    if (ascending) {\r\n      return quoteA.id > quoteB.id ? 1 : -1;\r\n    } else {\r\n      return quoteA.id < quoteB.id ? 1 : -1;\r\n    }\r\n  });\r\n};\r\nlet AllQuotes = () => {\r\n  return (\r\n    <div>\r\n      <button className=\"btn\">Sort Ascending</button>\r\n      <QuoteList quotes={dummy_data} />\r\n    </div>\r\n  );\r\n};\r\nexport default AllQuotes;\r\n"],"mappings":";AAAA,OAAOA,SAAS,MAAM,gCAAgC;AAAC;AACvD,IAAIC,UAAU,GAAG,CACf;EAAEC,EAAE,EAAE,IAAI;EAAEC,MAAM,EAAE,UAAU;EAAEC,IAAI,EAAE;AAAqB,CAAC,EAC5D;EAAEF,EAAE,EAAE,IAAI;EAAEC,MAAM,EAAE,QAAQ;EAAEC,IAAI,EAAE;AAAO,CAAC,CAC7C;AACD,MAAMC,UAAU,GAAG,CAACC,MAAM,EAAEC,SAAS,KAAK;EACxC,OAAOD,MAAM,CAACE,IAAI,CAAC,CAACC,MAAM,EAAEC,MAAM,KAAK;IACrC,IAAIH,SAAS,EAAE;MACb,OAAOE,MAAM,CAACP,EAAE,GAAGQ,MAAM,CAACR,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;IACvC,CAAC,MAAM;MACL,OAAOO,MAAM,CAACP,EAAE,GAAGQ,MAAM,CAACR,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;IACvC;EACF,CAAC,CAAC;AACJ,CAAC;AACD,IAAIS,SAAS,GAAG,MAAM;EACpB,oBACE;IAAA,wBACE;MAAQ,SAAS,EAAC,KAAK;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAwB,eAC/C,QAAC,SAAS;MAAC,MAAM,EAAEV;IAAW;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAC7B;AAEV,CAAC;AAAC,KAPEU,SAAS;AAQb,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module"}