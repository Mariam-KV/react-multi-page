{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marik\\\\Desktop\\\\react-multi-page\\\\src\\\\pages\\\\AllQuotes.js\",\n  _s = $RefreshSig$();\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport useHttp from \"../hooks/use-http\";\nimport { useEffect } from \"react\";\nimport { getAllQuotes } from \"../lib/api\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet dummy_data = [{\n  id: \"p1\",\n  author: \"murakami\",\n  text: \"always be yourself\"\n}, {\n  id: \"p2\",\n  author: \"amark\",\n  text: \"love\"\n}];\nlet AllQuotes = () => {\n  _s();\n  let {\n    sendRequest,\n    status,\n    data,\n    error\n  } = useHttp(getAllQuotes);\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n  if (status === \"pending\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: [/*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered focused\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n  if (!data || data.length === 0) {\n    return 6;\n  } else {\n    return /*#__PURE__*/_jsxDEV(QuoteList, {\n      quotes: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n};\n_s(AllQuotes, \"DKPGMvjq366TubE4Be7HO1d6aak=\", false, function () {\n  return [useHttp];\n});\n_c = AllQuotes;\nexport default AllQuotes;\nvar _c;\n$RefreshReg$(_c, \"AllQuotes\");","map":{"version":3,"names":["QuoteList","useHttp","useEffect","getAllQuotes","LoadingSpinner","dummy_data","id","author","text","AllQuotes","sendRequest","status","data","error","length"],"sources":["C:/Users/marik/Desktop/react-multi-page/src/pages/AllQuotes.js"],"sourcesContent":["import QuoteList from \"../components/quotes/QuoteList\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { useEffect } from \"react\";\r\nimport { getAllQuotes } from \"../lib/api\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nlet dummy_data = [\r\n  { id: \"p1\", author: \"murakami\", text: \"always be yourself\" },\r\n  { id: \"p2\", author: \"amark\", text: \"love\" },\r\n];\r\n\r\nlet AllQuotes = () => {\r\n  let { sendRequest, status, data, error } = useHttp(getAllQuotes);\r\n\r\n  useEffect(() => {\r\n    sendRequest();\r\n  }, [sendRequest]);\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />;\r\n      </div>\r\n    );\r\n  }\r\n  if (error) {\r\n    return <p className=\"centered focused\">{error}</p>;\r\n  }\r\n  if (!data || data.length === 0) {\r\n    return 6;\r\n  } else {\r\n    return <QuoteList quotes={data} />;\r\n  }\r\n};\r\nexport default AllQuotes;\r\n"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,gCAAgC;AACtD,OAAOC,OAAO,MAAM,mBAAmB;AACvC,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,YAAY,QAAQ,YAAY;AACzC,OAAOC,cAAc,MAAM,iCAAiC;AAAC;AAC7D,IAAIC,UAAU,GAAG,CACf;EAAEC,EAAE,EAAE,IAAI;EAAEC,MAAM,EAAE,UAAU;EAAEC,IAAI,EAAE;AAAqB,CAAC,EAC5D;EAAEF,EAAE,EAAE,IAAI;EAAEC,MAAM,EAAE,OAAO;EAAEC,IAAI,EAAE;AAAO,CAAC,CAC5C;AAED,IAAIC,SAAS,GAAG,MAAM;EAAA;EACpB,IAAI;IAAEC,WAAW;IAAEC,MAAM;IAAEC,IAAI;IAAEC;EAAM,CAAC,GAAGZ,OAAO,CAACE,YAAY,CAAC;EAEhED,SAAS,CAAC,MAAM;IACdQ,WAAW,EAAE;EACf,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EACjB,IAAIC,MAAM,KAAK,SAAS,EAAE;IACxB,oBACE;MAAK,SAAS,EAAC,UAAU;MAAA,wBACvB,QAAC,cAAc;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACd;EAEV;EACA,IAAIE,KAAK,EAAE;IACT,oBAAO;MAAG,SAAS,EAAC,kBAAkB;MAAA,UAAEA;IAAK;MAAA;MAAA;MAAA;IAAA,QAAK;EACpD;EACA,IAAI,CAACD,IAAI,IAAIA,IAAI,CAACE,MAAM,KAAK,CAAC,EAAE;IAC9B,OAAO,CAAC;EACV,CAAC,MAAM;IACL,oBAAO,QAAC,SAAS;MAAC,MAAM,EAAEF;IAAK;MAAA;MAAA;MAAA;IAAA,QAAG;EACpC;AACF,CAAC;AAAC,GArBEH,SAAS;EAAA,QACgCR,OAAO;AAAA;AAAA,KADhDQ,SAAS;AAsBb,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module"}