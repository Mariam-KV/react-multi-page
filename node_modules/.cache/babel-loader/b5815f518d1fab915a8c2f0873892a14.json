{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marik\\\\Desktop\\\\REACT\\\\react-multi-page\\\\src\\\\pages\\\\AllQuotes.js\",\n  _s = $RefreshSig$();\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport useHttp from \"../hooks/use-http\";\nimport { useEffect, useState } from \"react\";\nimport { getAllQuotes } from \"../lib/api\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet AllQuotes = () => {\n  _s();\n  //let { sendRequest, status, data, error } = useHttp(getAllQuotes, true);\n  let [newData, setData] = useState(false);\n  let handleDelete = id => {\n    fetch(`https://react1-9a97e-default-rtdb.firebaseio.com/quotes/${id}.json`, {\n      method: \"DELETE\"\n    });\n    fetch(`https://react1-9a97e-default-rtdb.firebaseio.com/quotes.json`).then(response => response.json()).then(fData => setData(fData));\n    const transformedQuotes = [];\n    for (const key in newData) {\n      const quoteObj = {\n        id: key,\n        ...newData[key]\n      };\n      transformedQuotes.push(quoteObj);\n    }\n    setData(transformedQuotes);\n    console.log(9);\n  };\n  useEffect(() => {\n    fetch(`https://react1-9a97e-default-rtdb.firebaseio.com/quotes.json`).then(response => response.json()).then(fData => setData(fData));\n    const transformedQuotes = [];\n    for (const key in newData) {\n      const quoteObj = {\n        id: key,\n        ...newData[key]\n      };\n      transformedQuotes.push(quoteObj);\n    }\n    setData(transformedQuotes);\n  }, [sendRequest]);\n  //setData(data);\n\n  return /*#__PURE__*/_jsxDEV(QuoteList, {\n    quotes: newData,\n    onHandleDelete: handleDelete\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 10\n  }, this);\n};\n_s(AllQuotes, \"lLCUjY0MUOAsn4rbVwKAe35C31Q=\");\n_c = AllQuotes;\nexport default AllQuotes;\nvar _c;\n$RefreshReg$(_c, \"AllQuotes\");","map":{"version":3,"names":["QuoteList","useHttp","useEffect","useState","getAllQuotes","LoadingSpinner","NoQuotesFound","AllQuotes","newData","setData","handleDelete","id","fetch","method","then","response","json","fData","transformedQuotes","key","quoteObj","push","console","log","sendRequest"],"sources":["C:/Users/marik/Desktop/REACT/react-multi-page/src/pages/AllQuotes.js"],"sourcesContent":["import QuoteList from \"../components/quotes/QuoteList\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { getAllQuotes } from \"../lib/api\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\r\n\r\nlet AllQuotes = () => {\r\n  //let { sendRequest, status, data, error } = useHttp(getAllQuotes, true);\r\n  let [newData, setData] = useState(false);\r\n  let handleDelete = (id) => {\r\n    fetch(\r\n      `https://react1-9a97e-default-rtdb.firebaseio.com/quotes/${id}.json`,\r\n      {\r\n        method: \"DELETE\",\r\n      }\r\n    );\r\n    fetch(`https://react1-9a97e-default-rtdb.firebaseio.com/quotes.json`)\r\n      .then((response) => response.json())\r\n      .then((fData) => setData(fData));\r\n    const transformedQuotes = [];\r\n\r\n    for (const key in newData) {\r\n      const quoteObj = {\r\n        id: key,\r\n        ...newData[key],\r\n      };\r\n\r\n      transformedQuotes.push(quoteObj);\r\n    }\r\n    setData(transformedQuotes);\r\n    console.log(9);\r\n  };\r\n  useEffect(() => {\r\n    fetch(`https://react1-9a97e-default-rtdb.firebaseio.com/quotes.json`)\r\n      .then((response) => response.json())\r\n      .then((fData) => setData(fData));\r\n    const transformedQuotes = [];\r\n\r\n    for (const key in newData) {\r\n      const quoteObj = {\r\n        id: key,\r\n        ...newData[key],\r\n      };\r\n\r\n      transformedQuotes.push(quoteObj);\r\n    }\r\n    setData(transformedQuotes);\r\n  }, [sendRequest]);\r\n  //setData(data);\r\n\r\n  return <QuoteList quotes={newData} onHandleDelete={handleDelete} />;\r\n};\r\nexport default AllQuotes;\r\n"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,gCAAgC;AACtD,OAAOC,OAAO,MAAM,mBAAmB;AACvC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,YAAY,QAAQ,YAAY;AACzC,OAAOC,cAAc,MAAM,iCAAiC;AAC5D,OAAOC,aAAa,MAAM,oCAAoC;AAAC;AAE/D,IAAIC,SAAS,GAAG,MAAM;EAAA;EACpB;EACA,IAAI,CAACC,OAAO,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACxC,IAAIO,YAAY,GAAIC,EAAE,IAAK;IACzBC,KAAK,CACF,2DAA0DD,EAAG,OAAM,EACpE;MACEE,MAAM,EAAE;IACV,CAAC,CACF;IACDD,KAAK,CAAE,8DAA6D,CAAC,CAClEE,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,KAAK,IAAKR,OAAO,CAACQ,KAAK,CAAC,CAAC;IAClC,MAAMC,iBAAiB,GAAG,EAAE;IAE5B,KAAK,MAAMC,GAAG,IAAIX,OAAO,EAAE;MACzB,MAAMY,QAAQ,GAAG;QACfT,EAAE,EAAEQ,GAAG;QACP,GAAGX,OAAO,CAACW,GAAG;MAChB,CAAC;MAEDD,iBAAiB,CAACG,IAAI,CAACD,QAAQ,CAAC;IAClC;IACAX,OAAO,CAACS,iBAAiB,CAAC;IAC1BI,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC;EAChB,CAAC;EACDrB,SAAS,CAAC,MAAM;IACdU,KAAK,CAAE,8DAA6D,CAAC,CAClEE,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,KAAK,IAAKR,OAAO,CAACQ,KAAK,CAAC,CAAC;IAClC,MAAMC,iBAAiB,GAAG,EAAE;IAE5B,KAAK,MAAMC,GAAG,IAAIX,OAAO,EAAE;MACzB,MAAMY,QAAQ,GAAG;QACfT,EAAE,EAAEQ,GAAG;QACP,GAAGX,OAAO,CAACW,GAAG;MAChB,CAAC;MAEDD,iBAAiB,CAACG,IAAI,CAACD,QAAQ,CAAC;IAClC;IACAX,OAAO,CAACS,iBAAiB,CAAC;EAC5B,CAAC,EAAE,CAACM,WAAW,CAAC,CAAC;EACjB;;EAEA,oBAAO,QAAC,SAAS;IAAC,MAAM,EAAEhB,OAAQ;IAAC,cAAc,EAAEE;EAAa;IAAA;IAAA;IAAA;EAAA,QAAG;AACrE,CAAC;AAAC,GA7CEH,SAAS;AAAA,KAATA,SAAS;AA8Cb,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module"}